name: Android Automation Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  android-automation-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        # Try npm ci first, fallback to npm install if lock file is out of sync
        npm ci --legacy-peer-deps || {
          echo "Lock file out of sync, running npm install..."
          npm install --legacy-peer-deps
        }
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        
    - name: Cache AVD
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-29
        
    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."
        
    - name: Setup Android Emulator and Build App
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          echo "Android emulator started"
          
          # Build the native Android app
          npx expo run:android --device
          
          # Verify app installation
          adb shell pm list packages | grep com.voyager.rn || {
            echo "ERROR: App com.voyager.rn not found on emulator"
            echo "Installed packages:"
            adb shell pm list packages | grep voyager
            exit 1
          }
          echo "✅ App com.voyager.rn is installed and ready for testing"
          
          # Install automation dependencies
          cd automation
          npm ci
          
          # Install Appium and required drivers
          npm install -g appium
          appium driver install uiautomator2
          
          # Start Appium server in background
          appium --log-level warn &
          APPIUM_PID=$!
          
          # Wait for Appium to start
          echo "Waiting for Appium to start..."
          sleep 15
          
          # Verify Appium is running
          curl -f http://localhost:4723/status || {
            echo "ERROR: Appium server not responding"
            exit 1
          }
          echo "✅ Appium server is running"
          
          # Run Android automation tests
          echo "Running Android automation tests..."
          PLATFORM=android npx wdio run wdio.mobile.conf.ts --spec tests/mobile/travel-preferences.test.ts
          
          # Kill Appium server
          kill $APPIUM_PID || true
          
    - name: Capture test artifacts on failure
      if: failure()
      run: |
        echo "Capturing debug information..."
        
        # Capture emulator screenshot
        adb exec-out screencap -p > automation/android-screenshot.png || true
        
        # Capture logcat
        adb logcat -d > automation/android-logcat.log || true
        
        # List installed packages for debugging
        adb shell pm list packages > automation/android-packages.txt || true
        
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-test-results-${{ github.run_number }}
        path: |
          automation/logs/
          automation/screenshots/
          automation/*.log
          automation/*.png
          automation/*.txt